; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
extra_scripts = pre:build_flags.py
build_flags =
    -Wall
    -D ETL_NO_STL
    ; Optimization flags. TODO try Ofast in the future, and try some other optimizations https://stackoverflow.com/a/38511897/2898030
    -Ofast -march=native -flto -floop-unrolling -fno-signed-zeros
lib_deps =
    br3ttb/PID @ 1.2.1
    nanopb/Nanopb @ 0.4.4
    etlcpp/Embedded Template Library @ 19.3.5
    bmellink/IBusBM @ 1.1.4

[STM32-base]
platform = ststm32
framework = arduino
upload_protocol = dfu
build_flags = -D PLATFORM_STM32
              -D ARDUINO_ARCH_STM32F4
              -D USBD_USE_CDC
              -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC
              -D PIO_FRAMEWORK_ARDUINO_USB_FULLMODE
              -D USBCON
              -D USBD_VID=0x1234
              -D USBD_PID=0x5678
              -D USB_MANUFACTURER="DroneSoc"
              -D USB_PRODUCT="\"DroneSoc FC\""
              -D HAL_PCD_MODULE_ENABLED
lib_deps = ${env.lib_deps}
           arduino-libraries/Servo @ 1.1.7

[ESP32-base]
platform = espressif32
framework = arduino
build_flags = -D PLATFORM_ESP32
lib_deps = ${env.lib_deps}
           plerup/EspSoftwareSerial @ 6.11.4
           madhephaestus/ESP32Servo @ 0.9.0

[env:STM32F405RG]
extends = STM32-base
board = genericSTM32F405RG

[env:STM32F411CE]
extends = STM32-base
board = genericSTM32F411CE

[env:ESP32CAM]
extends = ESP32-base
board = esp32cam

[env:HeltecWirelessStick]
extends = ESP32-base
board = heltec_wireless_stick
