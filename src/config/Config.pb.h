/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_CONFIG_CONFIG_PB_H_INCLUDED
#define PB_CONFIG_CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _I2CConfig_Speed {
    I2CConfig_Speed__100kHz = 0,
    I2CConfig_Speed__400kHz = 1
} I2CConfig_Speed;

typedef enum _MotorConfig_MotorProtocol {
    MotorConfig_MotorProtocol_PWM = 0,
    MotorConfig_MotorProtocol_DShot = 1
} MotorConfig_MotorProtocol;

typedef enum _ServoConfig_ServoRefreshRate {
    ServoConfig_ServoRefreshRate__50Hz = 0,
    ServoConfig_ServoRefreshRate__330Hz = 1
} ServoConfig_ServoRefreshRate;

/* Struct definitions */
typedef struct _SoftwareConfig {
    char dummy_field;
} SoftwareConfig;

typedef struct _IBUSRCConfig {
    uint32_t uartIndex;
} IBUSRCConfig;

typedef struct _MpuI2cConfig {
    uint32_t busIndex;
    uint32_t address;
} MpuI2cConfig;

typedef struct _Pin {
    char pinName[5];
} Pin;

typedef struct _I2CConfig {
    bool has_sda;
    Pin sda;
    bool has_scl;
    Pin scl;
    I2CConfig_Speed speed;
} I2CConfig;

typedef struct _MotorConfig {
    bool has_outputPin;
    Pin outputPin;
    MotorConfig_MotorProtocol motorProtocol;
} MotorConfig;

typedef struct _MpuSpiConfig {
    uint32_t busIndex;
    bool has_csPin;
    Pin csPin;
} MpuSpiConfig;

typedef struct _RCConfig {
    pb_size_t which_driverConfig;
    union {
        IBUSRCConfig ibus;
    } driverConfig;
} RCConfig;

typedef struct _SPIConfig {
    bool has_mosi;
    Pin mosi;
    bool has_miso;
    Pin miso;
    bool has_sck;
    Pin sck;
} SPIConfig;

typedef struct _ServoConfig {
    bool has_outputPin;
    Pin outputPin;
    ServoConfig_ServoRefreshRate refreshRate;
} ServoConfig;

typedef struct _UartConfig {
    bool has_tx;
    Pin tx;
    bool has_rx;
    Pin rx;
} UartConfig;

typedef struct _AccelerometerConfig {
    pb_size_t which_driverConfig;
    union {
        MpuI2cConfig mpuI2c;
        MpuSpiConfig mpuSpi;
    } driverConfig;
} AccelerometerConfig;

typedef struct _GyroscopeConfig {
    pb_size_t which_driverConfig;
    union {
        MpuI2cConfig mpuI2c;
        MpuSpiConfig mpuSpi;
    } driverConfig;
} GyroscopeConfig;

typedef struct _IOConfig {
    pb_size_t uartConfigs_count;
    UartConfig uartConfigs[8];
    pb_size_t softwareUartConfigs_count;
    UartConfig softwareUartConfigs[2];
    pb_size_t i2cConfigs_count;
    I2CConfig i2cConfigs[4];
    pb_size_t spiConfigs_count;
    SPIConfig spiConfigs[4];
} IOConfig;

typedef struct _HardwareConfig {
    bool has_ioConfig;
    IOConfig ioConfig;
    bool has_accelerometerConfig;
    AccelerometerConfig accelerometerConfig;
    bool has_gyroscopeConfig;
    GyroscopeConfig gyroscopeConfig;
    pb_size_t motors_count;
    MotorConfig motors[8];
    pb_size_t servos_count;
    ServoConfig servos[8];
    bool has_rcConfig;
    RCConfig rcConfig;
} HardwareConfig;


/* Helper constants for enums */
#define _I2CConfig_Speed_MIN I2CConfig_Speed__100kHz
#define _I2CConfig_Speed_MAX I2CConfig_Speed__400kHz
#define _I2CConfig_Speed_ARRAYSIZE ((I2CConfig_Speed)(I2CConfig_Speed__400kHz+1))

#define _MotorConfig_MotorProtocol_MIN MotorConfig_MotorProtocol_PWM
#define _MotorConfig_MotorProtocol_MAX MotorConfig_MotorProtocol_DShot
#define _MotorConfig_MotorProtocol_ARRAYSIZE ((MotorConfig_MotorProtocol)(MotorConfig_MotorProtocol_DShot+1))

#define _ServoConfig_ServoRefreshRate_MIN ServoConfig_ServoRefreshRate__50Hz
#define _ServoConfig_ServoRefreshRate_MAX ServoConfig_ServoRefreshRate__330Hz
#define _ServoConfig_ServoRefreshRate_ARRAYSIZE ((ServoConfig_ServoRefreshRate)(ServoConfig_ServoRefreshRate__330Hz+1))


/* Initializer values for message structs */
#define HardwareConfig_init_default              {false, IOConfig_init_default, false, AccelerometerConfig_init_default, false, GyroscopeConfig_init_default, 0, {MotorConfig_init_default, MotorConfig_init_default, MotorConfig_init_default, MotorConfig_init_default, MotorConfig_init_default, MotorConfig_init_default, MotorConfig_init_default, MotorConfig_init_default}, 0, {ServoConfig_init_default, ServoConfig_init_default, ServoConfig_init_default, ServoConfig_init_default, ServoConfig_init_default, ServoConfig_init_default, ServoConfig_init_default, ServoConfig_init_default}, false, RCConfig_init_default}
#define SoftwareConfig_init_default              {0}
#define IOConfig_init_default                    {0, {UartConfig_init_default, UartConfig_init_default, UartConfig_init_default, UartConfig_init_default, UartConfig_init_default, UartConfig_init_default, UartConfig_init_default, UartConfig_init_default}, 0, {UartConfig_init_default, UartConfig_init_default}, 0, {I2CConfig_init_default, I2CConfig_init_default, I2CConfig_init_default, I2CConfig_init_default}, 0, {SPIConfig_init_default, SPIConfig_init_default, SPIConfig_init_default, SPIConfig_init_default}}
#define UartConfig_init_default                  {false, Pin_init_default, false, Pin_init_default}
#define I2CConfig_init_default                   {false, Pin_init_default, false, Pin_init_default, _I2CConfig_Speed_MIN}
#define SPIConfig_init_default                   {false, Pin_init_default, false, Pin_init_default, false, Pin_init_default}
#define AccelerometerConfig_init_default         {0, {MpuI2cConfig_init_default}}
#define GyroscopeConfig_init_default             {0, {MpuI2cConfig_init_default}}
#define MpuSpiConfig_init_default                {0, false, Pin_init_default}
#define MpuI2cConfig_init_default                {0, 0}
#define MotorConfig_init_default                 {false, Pin_init_default, _MotorConfig_MotorProtocol_MIN}
#define ServoConfig_init_default                 {false, Pin_init_default, _ServoConfig_ServoRefreshRate_MIN}
#define Pin_init_default                         {""}
#define RCConfig_init_default                    {0, {IBUSRCConfig_init_default}}
#define IBUSRCConfig_init_default                {0}
#define HardwareConfig_init_zero                 {false, IOConfig_init_zero, false, AccelerometerConfig_init_zero, false, GyroscopeConfig_init_zero, 0, {MotorConfig_init_zero, MotorConfig_init_zero, MotorConfig_init_zero, MotorConfig_init_zero, MotorConfig_init_zero, MotorConfig_init_zero, MotorConfig_init_zero, MotorConfig_init_zero}, 0, {ServoConfig_init_zero, ServoConfig_init_zero, ServoConfig_init_zero, ServoConfig_init_zero, ServoConfig_init_zero, ServoConfig_init_zero, ServoConfig_init_zero, ServoConfig_init_zero}, false, RCConfig_init_zero}
#define SoftwareConfig_init_zero                 {0}
#define IOConfig_init_zero                       {0, {UartConfig_init_zero, UartConfig_init_zero, UartConfig_init_zero, UartConfig_init_zero, UartConfig_init_zero, UartConfig_init_zero, UartConfig_init_zero, UartConfig_init_zero}, 0, {UartConfig_init_zero, UartConfig_init_zero}, 0, {I2CConfig_init_zero, I2CConfig_init_zero, I2CConfig_init_zero, I2CConfig_init_zero}, 0, {SPIConfig_init_zero, SPIConfig_init_zero, SPIConfig_init_zero, SPIConfig_init_zero}}
#define UartConfig_init_zero                     {false, Pin_init_zero, false, Pin_init_zero}
#define I2CConfig_init_zero                      {false, Pin_init_zero, false, Pin_init_zero, _I2CConfig_Speed_MIN}
#define SPIConfig_init_zero                      {false, Pin_init_zero, false, Pin_init_zero, false, Pin_init_zero}
#define AccelerometerConfig_init_zero            {0, {MpuI2cConfig_init_zero}}
#define GyroscopeConfig_init_zero                {0, {MpuI2cConfig_init_zero}}
#define MpuSpiConfig_init_zero                   {0, false, Pin_init_zero}
#define MpuI2cConfig_init_zero                   {0, 0}
#define MotorConfig_init_zero                    {false, Pin_init_zero, _MotorConfig_MotorProtocol_MIN}
#define ServoConfig_init_zero                    {false, Pin_init_zero, _ServoConfig_ServoRefreshRate_MIN}
#define Pin_init_zero                            {""}
#define RCConfig_init_zero                       {0, {IBUSRCConfig_init_zero}}
#define IBUSRCConfig_init_zero                   {0}

/* Field tags (for use in manual encoding/decoding) */
#define IBUSRCConfig_uartIndex_tag               1
#define MpuI2cConfig_busIndex_tag                1
#define MpuI2cConfig_address_tag                 2
#define Pin_pinName_tag                          1
#define I2CConfig_sda_tag                        1
#define I2CConfig_scl_tag                        2
#define I2CConfig_speed_tag                      3
#define MotorConfig_outputPin_tag                1
#define MotorConfig_motorProtocol_tag            2
#define MpuSpiConfig_busIndex_tag                1
#define MpuSpiConfig_csPin_tag                   2
#define RCConfig_ibus_tag                        1
#define SPIConfig_mosi_tag                       1
#define SPIConfig_miso_tag                       2
#define SPIConfig_sck_tag                        3
#define ServoConfig_outputPin_tag                1
#define ServoConfig_refreshRate_tag              2
#define UartConfig_tx_tag                        1
#define UartConfig_rx_tag                        2
#define AccelerometerConfig_mpuI2c_tag           1
#define AccelerometerConfig_mpuSpi_tag           2
#define GyroscopeConfig_mpuI2c_tag               1
#define GyroscopeConfig_mpuSpi_tag               2
#define IOConfig_uartConfigs_tag                 1
#define IOConfig_softwareUartConfigs_tag         2
#define IOConfig_i2cConfigs_tag                  3
#define IOConfig_spiConfigs_tag                  4
#define HardwareConfig_ioConfig_tag              1
#define HardwareConfig_accelerometerConfig_tag   2
#define HardwareConfig_gyroscopeConfig_tag       3
#define HardwareConfig_motors_tag                4
#define HardwareConfig_servos_tag                5
#define HardwareConfig_rcConfig_tag              6

/* Struct field encoding specification for nanopb */
#define HardwareConfig_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  ioConfig,          1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  accelerometerConfig,   2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  gyroscopeConfig,   3) \
X(a, STATIC,   REPEATED, MESSAGE,  motors,            4) \
X(a, STATIC,   REPEATED, MESSAGE,  servos,            5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  rcConfig,          6)
#define HardwareConfig_CALLBACK NULL
#define HardwareConfig_DEFAULT NULL
#define HardwareConfig_ioConfig_MSGTYPE IOConfig
#define HardwareConfig_accelerometerConfig_MSGTYPE AccelerometerConfig
#define HardwareConfig_gyroscopeConfig_MSGTYPE GyroscopeConfig
#define HardwareConfig_motors_MSGTYPE MotorConfig
#define HardwareConfig_servos_MSGTYPE ServoConfig
#define HardwareConfig_rcConfig_MSGTYPE RCConfig

#define SoftwareConfig_FIELDLIST(X, a) \

#define SoftwareConfig_CALLBACK NULL
#define SoftwareConfig_DEFAULT NULL

#define IOConfig_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  uartConfigs,       1) \
X(a, STATIC,   REPEATED, MESSAGE,  softwareUartConfigs,   2) \
X(a, STATIC,   REPEATED, MESSAGE,  i2cConfigs,        3) \
X(a, STATIC,   REPEATED, MESSAGE,  spiConfigs,        4)
#define IOConfig_CALLBACK NULL
#define IOConfig_DEFAULT NULL
#define IOConfig_uartConfigs_MSGTYPE UartConfig
#define IOConfig_softwareUartConfigs_MSGTYPE UartConfig
#define IOConfig_i2cConfigs_MSGTYPE I2CConfig
#define IOConfig_spiConfigs_MSGTYPE SPIConfig

#define UartConfig_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  tx,                1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  rx,                2)
#define UartConfig_CALLBACK NULL
#define UartConfig_DEFAULT NULL
#define UartConfig_tx_MSGTYPE Pin
#define UartConfig_rx_MSGTYPE Pin

#define I2CConfig_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sda,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  scl,               2) \
X(a, STATIC,   SINGULAR, UENUM,    speed,             3)
#define I2CConfig_CALLBACK NULL
#define I2CConfig_DEFAULT NULL
#define I2CConfig_sda_MSGTYPE Pin
#define I2CConfig_scl_MSGTYPE Pin

#define SPIConfig_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  mosi,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  miso,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sck,               3)
#define SPIConfig_CALLBACK NULL
#define SPIConfig_DEFAULT NULL
#define SPIConfig_mosi_MSGTYPE Pin
#define SPIConfig_miso_MSGTYPE Pin
#define SPIConfig_sck_MSGTYPE Pin

#define AccelerometerConfig_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (driverConfig,mpuI2c,driverConfig.mpuI2c),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (driverConfig,mpuSpi,driverConfig.mpuSpi),   2)
#define AccelerometerConfig_CALLBACK NULL
#define AccelerometerConfig_DEFAULT NULL
#define AccelerometerConfig_driverConfig_mpuI2c_MSGTYPE MpuI2cConfig
#define AccelerometerConfig_driverConfig_mpuSpi_MSGTYPE MpuSpiConfig

#define GyroscopeConfig_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (driverConfig,mpuI2c,driverConfig.mpuI2c),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (driverConfig,mpuSpi,driverConfig.mpuSpi),   2)
#define GyroscopeConfig_CALLBACK NULL
#define GyroscopeConfig_DEFAULT NULL
#define GyroscopeConfig_driverConfig_mpuI2c_MSGTYPE MpuI2cConfig
#define GyroscopeConfig_driverConfig_mpuSpi_MSGTYPE MpuSpiConfig

#define MpuSpiConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   busIndex,          1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  csPin,             2)
#define MpuSpiConfig_CALLBACK NULL
#define MpuSpiConfig_DEFAULT NULL
#define MpuSpiConfig_csPin_MSGTYPE Pin

#define MpuI2cConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   busIndex,          1) \
X(a, STATIC,   SINGULAR, UINT32,   address,           2)
#define MpuI2cConfig_CALLBACK NULL
#define MpuI2cConfig_DEFAULT NULL

#define MotorConfig_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  outputPin,         1) \
X(a, STATIC,   SINGULAR, UENUM,    motorProtocol,     2)
#define MotorConfig_CALLBACK NULL
#define MotorConfig_DEFAULT NULL
#define MotorConfig_outputPin_MSGTYPE Pin

#define ServoConfig_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  outputPin,         1) \
X(a, STATIC,   SINGULAR, UENUM,    refreshRate,       2)
#define ServoConfig_CALLBACK NULL
#define ServoConfig_DEFAULT NULL
#define ServoConfig_outputPin_MSGTYPE Pin

#define Pin_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   pinName,           1)
#define Pin_CALLBACK NULL
#define Pin_DEFAULT NULL

#define RCConfig_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (driverConfig,ibus,driverConfig.ibus),   1)
#define RCConfig_CALLBACK NULL
#define RCConfig_DEFAULT NULL
#define RCConfig_driverConfig_ibus_MSGTYPE IBUSRCConfig

#define IBUSRCConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   uartIndex,         1)
#define IBUSRCConfig_CALLBACK NULL
#define IBUSRCConfig_DEFAULT NULL

extern const pb_msgdesc_t HardwareConfig_msg;
extern const pb_msgdesc_t SoftwareConfig_msg;
extern const pb_msgdesc_t IOConfig_msg;
extern const pb_msgdesc_t UartConfig_msg;
extern const pb_msgdesc_t I2CConfig_msg;
extern const pb_msgdesc_t SPIConfig_msg;
extern const pb_msgdesc_t AccelerometerConfig_msg;
extern const pb_msgdesc_t GyroscopeConfig_msg;
extern const pb_msgdesc_t MpuSpiConfig_msg;
extern const pb_msgdesc_t MpuI2cConfig_msg;
extern const pb_msgdesc_t MotorConfig_msg;
extern const pb_msgdesc_t ServoConfig_msg;
extern const pb_msgdesc_t Pin_msg;
extern const pb_msgdesc_t RCConfig_msg;
extern const pb_msgdesc_t IBUSRCConfig_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define HardwareConfig_fields &HardwareConfig_msg
#define SoftwareConfig_fields &SoftwareConfig_msg
#define IOConfig_fields &IOConfig_msg
#define UartConfig_fields &UartConfig_msg
#define I2CConfig_fields &I2CConfig_msg
#define SPIConfig_fields &SPIConfig_msg
#define AccelerometerConfig_fields &AccelerometerConfig_msg
#define GyroscopeConfig_fields &GyroscopeConfig_msg
#define MpuSpiConfig_fields &MpuSpiConfig_msg
#define MpuI2cConfig_fields &MpuI2cConfig_msg
#define MotorConfig_fields &MotorConfig_msg
#define ServoConfig_fields &ServoConfig_msg
#define Pin_fields &Pin_msg
#define RCConfig_fields &RCConfig_msg
#define IBUSRCConfig_fields &IBUSRCConfig_msg

/* Maximum encoded size of messages (where known) */
#define HardwareConfig_size                      605
#define SoftwareConfig_size                      0
#define IOConfig_size                            364
#define UartConfig_size                          16
#define I2CConfig_size                           18
#define SPIConfig_size                           24
#define AccelerometerConfig_size                 16
#define GyroscopeConfig_size                     16
#define MpuSpiConfig_size                        14
#define MpuI2cConfig_size                        12
#define MotorConfig_size                         10
#define ServoConfig_size                         10
#define Pin_size                                 6
#define RCConfig_size                            8
#define IBUSRCConfig_size                        6

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
