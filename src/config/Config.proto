syntax = "proto3";

message HardwareConfig {
    IOConfig ioConfig = 1;
    AccelerometerConfig accelerometerConfig = 2;
    GyroscopeConfig gyroscopeConfig = 3;
    repeated MotorConfig motors = 4;
    repeated ServoConfig servos = 5;
}

message SoftwareConfig {

}

// Bus config
message IOConfig {
    repeated UartConfig uartConfigs = 1;
    repeated UartConfig softwareUartConfigs = 2;
    repeated I2CConfig i2cConfigs = 3;
    repeated SPIConfig spiConfigs = 4;
}

message UartConfig {
    Pin tx = 1;
    Pin rx = 2;
}

message I2CConfig {
    Pin sda = 1;
    Pin scl = 2;
    Speed speed = 3;

    enum Speed {
        _100kHz = 0;
        _400kHz = 1;
    }
}

message SPIConfig {
    Pin mosi = 1;
    Pin miso = 2;
    Pin sck = 3;
}

// Config options for Accelerometer
message AccelerometerConfig {
    oneof driverConfig {
        MpuI2cConfig mpuI2c = 1;
        MpuSpiConfig mpuSpi = 2;
    }
}

// Config options for Gyroscope
message GyroscopeConfig {
    oneof driverConfig {
        MpuI2cConfig mpuI2c = 1;
        MpuSpiConfig mpuSpi = 2;
    }
}

// Driver for MPU6000 / MPU9250 accelerometer and gyroscope over SPI
message MpuSpiConfig {
    uint32 busIndex = 1;
    Pin csPin = 2;
    Pin interruptPin = 3;
}

// Driver for MPU6000 / MPU6050 / MPU9250 accelerometer and gyroscope over I2C
message MpuI2cConfig {
    uint32 busIndex = 1;
    uint32 address = 2;
    Pin interruptPin = 3;
}

// Motor config
message MotorConfig {
    Pin outputPin = 1;
    MotorProtocol motorProtocol = 2;

    enum MotorProtocol {
        PWM = 0;
        DShot = 1;
    }
}

message ServoConfig {
    Pin outputPin = 1;
    ServoRefreshRate refreshRate = 2; // TODO only supported on ESP32

    enum ServoRefreshRate {
        _50Hz = 0;
        _330Hz = 1;
    }
}

message Pin {
    string pinName = 1;
}
